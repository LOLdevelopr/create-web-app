{"version":3,"sources":["../generators/app/utils/questions.ts","../generators/app/utils/endMessage.ts","../generators/app/utils/pkgjsonUtils.ts","../generators/app/utils/projectFeatures.ts","../generators/app/index.ts","utils/generator.ts","commands/create.ts","commands/list.ts","utils/list-prompt.ts","commands/run.ts","../package.json","index.ts"],"names":["module","exports","name","version","description","homepage","files","bin","cwa","main","keywords","devDependencies","commitizen","eslint","husky","jest","nodemon","prettier","typescript","engines","npm","dependencies","cfonts","chalk","lodash","prettycli","sade","testEnvironment","testPathIgnorePatterns","hooks","scripts","lint","local","release","commit","build","watch","repository","type","url","license"],"mappings":"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","file":"cli.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable */\r\n\r\nconst validate = (val: string): boolean | string => val.length > 0 ? true : \"Please enter the name\";\r\n\r\nconst questions: Object[] = [{\r\n\ttype: \"input\",\r\n\tname: \"projectName\",\r\n\tmessage: \"Please Enter Your Project Name [ Required ] :  \",\r\n\tvalidate,\r\n  },\r\n  {\r\n\ttype: \"input\",\r\n\tname: \"description\",\r\n\tmessage: \"Please Enter your project description : \",\r\n\tdefault: \"Awesome Project !!\",\r\n  },\r\n  {\r\n\ttype: \"input\",\r\n\tname: \"author\",\r\n\tmessage: \"Please Enter your project author : \",\r\n\tdefault : \" \",\r\n  },\r\n  {\r\n\ttype: \"rawlist\",\r\n\tname: \"stack\",\r\n\tmessage: \"Please Select Project Stack [ Required ] : \",\r\n\tchoices: [\r\n\t\t\"MERN ==> MongoDB + Express + React + Node\",\r\n\t\t\"TMEN ==> Typescript + MongoDB + Express + Node\",\r\n\t\t\"MERNG ==> MongoDB + Express + React + Node + GraphQL (Not stable yet)\",\r\n\t],\r\n\tvalidate,\r\n\tfilter : (val: string): string => val.split(\"==>\")[0].trim(),\r\n  },\r\n  {\r\n\ttype: \"rawlist\",\r\n\tname: \"bundler\",\r\n\tmessage: \"Please Select Project bundler [ Required ] : \",\r\n\tchoices: [\r\n\t\t\"Webpack\",\r\n\t\t\"Parcel\",\r\n\t],\r\n\tvalidate,\r\n  },\r\n  {\r\n\tdefault: \"0.0.1\",\r\n\tmessage: \"Please Enter Version : \",\r\n\tname: \"version\",\r\n\ttype: \"input\",\r\n  },\r\n  {\r\n\tdefault: \"\",\r\n\tmessage: \"Please Enter Your Scaffold Github Repo for package.json file : \",\r\n\tname: \"githubRepo\",\r\n\ttype: \"input\",\r\n  },\r\n  {\r\n\tdefault: \"\",\r\n\tmessage: \"Please Enter Your Scaffold license for package.json file :\",\r\n\tname: \"license\",\r\n\ttype: \"input\",\r\n  },\r\n\r\n];\r\n\r\nexport default questions;\r\n","\r\n\r\n\r\nexport const endMessage = (projectName : string , features : string) : void  => {\r\n  console.log(`\r\n  Your Project Consist of:\r\n  ${features}\r\n\r\n  Steps :\r\n\r\n  $ cd ${projectName} \\n\r\n  $ npm install \\n\r\n  $ npm test\r\n  `);\r\n}\r\n","import {\r\n  IPkgJson,\r\n  IPkgJsonFromTemplate\r\n} from '../type/pkgjson';\r\nimport * as _ from \"lodash\";\r\n\r\n\r\n\r\n\r\nexport const createPkgJsonWithWebpack = (pkgjsonFromTemplate: IPkgJsonFromTemplate, pkgjson: IPkgJson): IPkgJson | IPkgJsonFromTemplate => {\r\n  /*\r\n  The present template for any Stack is build with webpack only\r\n   Return the same package.json for now\r\n   Can update it later in order when removing the default webpack configs from the template\r\n   Will do it when adding more bundlers like I dont know\r\n\r\n  */\r\n  pkgjsonFromTemplate = _.assign(pkgjsonFromTemplate,pkgjson)\r\n  return pkgjsonFromTemplate;\r\n}\r\n\r\n\r\nexport const createPkgJsonWithParcel = (pkgjsonFromTemplate: IPkgJsonFromTemplate, pkgjson: IPkgJson): IPkgJson | IPkgJsonFromTemplate => {\r\n  const scripts = {\r\n    \"build:server\": \"parcel build --no-autoinstall  ./src/server/index.js --target node --out-dir ./bin --out-file server.js\",\r\n    \"build:client\": \"parcel build --no-autoinstall  ./src/client/index.js  --out-dir ./public/js/ --out-file app.bundle.js\",\r\n    \"watch:server\": \"parcel watch --no-autoinstall  ./src/server/index.js --target node --out-dir ./bin --out-file server.js\",\r\n    \"watch:client\": \"parcel watch --no-autoinstall  ./src/client/index.js  --out-dir ./public/js/ --out-file app.bundle.js\",\r\n    \"build\": \"npm run build:client && npm run build:server \",\r\n    \"watch\": \"npm run watch:client && npm run watch:server \"\r\n  }\r\n  pkgjsonFromTemplate.scripts = _.assignIn(pkgjsonFromTemplate.scripts,scripts);\r\n  pkgjsonFromTemplate.devDependencies = _.assignIn(pkgjsonFromTemplate.devDependencies, {\r\n    \"parcel-bundler\": \"^1.12.3\"\r\n  })\r\n\r\n  /*\r\n\r\n  Need to remove the hard-coded devDependecies in the [] which we need to omit\r\n\r\n   _.omit(pkgjsonFromTemplate.devDependencies,Object.keys(JSON.parse(/webpack/g.exec(JSON.stringify(pkgjsonFromTemplate.devDependencies)))))\r\n\r\n  */\r\n\r\n  pkgjsonFromTemplate.devDependencies = _.omit(pkgjsonFromTemplate.devDependencies, [\r\n    \"webpack\",\r\n    \"webpack-cli\",\r\n    \"webpack-dev-server\",\r\n    \"webpack-node-externals\"\r\n  ])\r\n\r\n\r\n\r\n  pkgjsonFromTemplate = _.assign(pkgjsonFromTemplate,pkgjson)\r\n  return pkgjsonFromTemplate\r\n}\r\n","export const features = {\r\n  MERN:\"MongoDB ,Express ,React ,Node, SSR, State Management Using Redux, Tests , bundlers, eslint enabled, Dockerfile, Docker compose \",\r\n  TMEN:\"Typescript ,MongoDB ,Express , Node ,tests , eslint\",\r\n  MERNG:\"MongoDB , Express , React , Node , GraphQL (Not stable yet) , SSR, State Management using Redux , eslint enabled\"\r\n}\r\n","import * as path from \"path\";\r\nimport Generator from \"yeoman-generator\";\r\nimport promptQuestions from \"./utils/questions\";\r\nconst {\r\n  error,\r\n  loading,\r\n  info,\r\n} = require(\"prettycli\");\r\nimport * as fs from \"fs\";\r\nimport {\r\n  IAnswer,\r\n} from \"./type/answer\"\r\nimport {\r\n  IPkgJson,\r\n  IPkgJsonFromTemplate,\r\n} from \"./type/pkgjson\";\r\nimport {\r\n  endMessage,\r\n} from \"./utils/endMessage\"\r\nimport {\r\n  createPkgJsonWithParcel,\r\n  createPkgJsonWithWebpack,\r\n} from \"./utils/pkgjsonUtils\"\r\nconst CFonts = require(\"cfonts\");\r\nimport {\r\n  features,\r\n} from \"./utils/projectFeatures\";\r\n\r\nexport default class StarterGenerator extends Generator {\r\n  private answers: IAnswer;\r\n  private pkgjson: IPkgJson;\r\n\r\n  constructor(args, opts) {\r\n\tsuper(args, opts);\r\n\r\n\tCFonts.say(\"Create|Web App\", {\r\n\t\tfont: \"simple3d\",\r\n\t\talign: \"left\",\r\n\t\tcolors: [\"yellowBright\"],\r\n\t\tbackground: \"transparent\",\r\n\t\tletterSpacing: 1,\r\n\t\tlineHeight: 1,\r\n\t\tspace: true,\r\n\t\tmaxLength: \"0\",\r\n\t});\r\n\r\n  }\r\n  public async prompting() {\r\n\tconst done: () => {} = this.async();\r\n\t// Have Yeoman greet the user.\r\n\r\n\treturn this.prompt(promptQuestions)\r\n\t\t.then(\r\n\t\t(answer: IAnswer): void | PromiseLike<void> => {\r\n\t\t\tthis.answers = answer;\r\n\t\t\tconst tmppkgjsonFromAnswer: IPkgJson = {\r\n\t\t\tname: answer.projectName,\r\n\t\t\tauthor: answer.author,\r\n\t\t\tlicense: answer.license,\r\n\t\t\tdescription: answer.description,\r\n\t\t\trepo: answer.githubRepo,\r\n\t\t\tkeywords: [answer.stack],\r\n\t\t\t};\r\n\t\t\tloading(\"CREATING\", \"Cooking your project ! Please wait ...\");\r\n\t\t\tfs.readFile(\r\n\t\t\tpath.join(__dirname, `../generators/app/templates/${answer.stack}/package.json`), {\r\n\t\t\t\tencoding: \"utf-8\",\r\n\t\t\t},\r\n\t\t\tasync (err, data) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\terror(\"File Not Found, Internal Error.Please Report an issue\");\r\n\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\tlet pkgjsonFromTemplate: IPkgJsonFromTemplate = JSON.parse(data);\r\n\t\t\t\tconst {\r\n\t\t\t\t\tbundler,\r\n\t\t\t\t} = answer;\r\n\t\t\t\tpkgjsonFromTemplate = bundler == \"Webpack\" ? createPkgJsonWithWebpack(pkgjsonFromTemplate, tmppkgjsonFromAnswer) : bundler == \"Parcel\" ? createPkgJsonWithParcel(pkgjsonFromTemplate, tmppkgjsonFromAnswer) : pkgjsonFromTemplate;\r\n\r\n\t\t\t\t// Now will use this this.pkjson to write to the package.json file after copying of the files\r\n\t\t\t\tthis.pkgjson = {\r\n\t\t\t\t\t...pkgjsonFromTemplate,\r\n\t\t\t\t};\r\n\t\t\t\tdone();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n  }\r\n\r\n  public writing() {\r\n\tinfo(\"DONE\", \"Copying your project.....\");\r\n\r\n\tthis.fs.copy(\r\n\t\tthis.templatePath(path.join(__dirname, `../generators/app/templates/${this.answers.stack}`)),\r\n\t\tthis.destinationPath(path.resolve(this.answers.projectName)),\r\n\t);\r\n\tinfo(\"DONE\", \"Writing your dependencies and scripts.....\");\r\n\r\n\tthis.fs.writeJSON(`${path.resolve(__dirname, this.answers.projectName)}/package.json`, this.pkgjson);\r\n\r\n  }\r\n\r\n  public install() {\r\n\t// this.installDependencies({\r\n\t//   npm: true,\r\n\t//   bower: false,\r\n\t// });\r\n  }\r\n\r\n  public end() {\r\n\tCFonts.say(\"Thank|You\", {\r\n\t\tfont: \"block\",\r\n\t\talign: \"left\",\r\n\t\tcolors: [\"yellowBright\"],\r\n\t\tbackground: \"transparent\",\r\n\t\tletterSpacing: 1,\r\n\t\tlineHeight: 1,\r\n\t\tspace: true,\r\n\t\tmaxLength: \"0\",\r\n\t});\r\n\r\n\tendMessage(this.answers.projectName, features[this.answers.stack]);\r\n\r\n  }\r\n\r\n}\r\n","import yeoman from \"yeoman-environment\";\r\nimport generator from \"../../generators/app/index\";\r\n\r\nconst env = yeoman.createEnv();\r\n\r\nexport const projectName: any = \"create-web-app\";\r\n\r\nenv.registerStub(generator, projectName);\r\n\r\nexport default env;\r\n","import env, { projectName } from \"../utils/generator\";\r\n\r\nexport default (): void => env.run(projectName);\r\n","import chalk from \"chalk\";\r\nimport * as glob from \"glob-all\";\r\nimport * as path from \"path\"\r\nexport default (): void => {\r\n// tslint:disable-next-line: no-console\r\n  process.stdout.write(`\\n${chalk.bgGreen.bold(`List of All Templates Available`)} \\n`);\r\n  const listTemplate = glob.sync(`${path.resolve(__dirname + \"../../generators/app/templates\").trim()}/*`)\r\n\t.map((p: string, i: number) => process.stdout.write(`${i} ${p.split(\"/\").pop()} \\n`));\r\n};\r\n","import inquirer from \"inquirer\";\r\n\r\nexport default (name: string , message: string, choicesList: string[]) =>   inquirer\r\n.prompt({\r\n  type : \"list\",\r\n  name,\r\n  message,\r\n  choices : choicesList,\r\n});\r\n","// tslint:disable\r\n\r\n// import cp from \"child_process\";\r\n\r\nimport fs from \"fs\";\r\nimport {\r\n  error,\r\n  info,\r\n  warn,\r\n} from \"prettycli\";\r\nimport listPrompt from \"../utils/list-prompt\";\r\nimport {\r\n  runArgumentI\r\n} from \"../types/run\";\r\nimport chalk from 'chalk';\r\n\r\nexport default (projectName: string, argv: runArgumentI): void => {\r\n  if (projectName === undefined) {\r\n    warn(`Please mention the project name \\n `);\r\n    warn(`$ create-web-app run --help`);\r\n    process.exit();\r\n  }\r\n  const {\r\n    src\r\n  } = argv;\r\n  info(\"FINDING\", `Finding your project ${projectName} in ${src}`);\r\n  try {\r\n    const isSrcExist: boolean = fs.lstatSync(src).isDirectory();\r\n  } catch (errors) {\r\n    error(\"[src] doesn't exist\", {\r\n      exit: false,\r\n      silent: false\r\n    });\r\n    process.exit();\r\n  }\r\n  const templatePKG = require(process.cwd().trim() + `/${src}/${projectName}/package.json`);\r\n  const {\r\n    scripts\r\n  } = templatePKG;\r\n\r\n  listPrompt(\"scriptToRun\", \"List of scripts available to run \", Object.keys(scripts))\r\n    .then((answer: {\r\n      scriptToRun: string\r\n    }): void => {\r\n      const {\r\n        scriptToRun\r\n      } = answer;\r\n      const command = `cd ${src}/${projectName}`;\r\n      let options = [\"npm\", \"run\", scriptToRun]\r\n      info(\"COOKING\", ` Commands For You`);\r\n      process.stdout.write(\r\n        `\r\n      ${chalk.italic.bold(\"Run the following commands\")} \\n\r\n      $ ${chalk.yellow(command)}\r\n      and then\r\n      $ ${chalk.yellow(options.join(\" \"))}\r\n      `)\r\n\r\n      process.exit();\r\n      /*\r\n      [WIP] : To run the commands from here which are currently showing\r\n      const cdExec = cp.spawn(command,[],{\r\n              stdio: \"inherit\",\r\n              shell: true\r\n            })\r\n            cdExec.on(\"exit\",(code) => {\r\n              if(code == 1){\r\n                error(\"Error while chaning the directory\", {\r\n                  exit: false,\r\n                  silent: false\r\n                });\r\n                info(\"Alternate\",\"Please run the following command \\n\")\r\n                info(\"$\",`${command} && npm[or yarn] ${options.join(\" \")}`)\r\n                process.exit();\r\n              }\r\n              info(\"RUNNING\", `Running ${scriptToRun}`);\r\n              const runExec = cp.spawn(\"npm\",options,{\r\n                stdio: \"inherit\",\r\n                shell: true\r\n              })\r\n            })\r\n      */\r\n    });\r\n\r\n};\r\n","module.exports={name:\"@buildtip/create-web-app\",version:\"1.1.2\",description:\"Select your project type and use any boilerplate to get started\",homepage:\"\",files:[\"generators\",\"dist\"],bin:{cwa:\"./dist/cli.js\"},main:\"./dist/cli.js\",keywords:[\"boilerplates\",\"starter\",\"yeoman-generator\",\"web\",\"javascript\",\"react\",\"node\",\"mongodb\"],devDependencies:{\"@commitlint/cli\":\"8.0.0\",\"@commitlint/config-conventional\":\"8.0.0\",\"@commitlint/travis-cli\":\"8.0.0\",\"@types/chalk\":\"2.2.0\",\"@types/node\":\"12.0.8\",\"@types/yeoman-environment\":\"2.3.1\",\"@types/yeoman-generator\":\"3.1.3\",commitizen:\"3.1.1\",eslint:\"5.16.0\",husky:\"2.4.1\",jest:\"23.6.0\",\"lint-staged\":\"8.2.0\",nodemon:\"1.19.1\",\"parcel-bundler\":\"1.12.3\",\"parcel-plugin-shebang\":\"^1.2.5\",prettier:\"1.18.2\",\"standard-version\":\"6.0.1\",typescript:\"3.5.1\",\"yeoman-assert\":\"3.1.1\",\"yeoman-test\":\"2.0.0\"},engines:{npm:\"6.9.1-next.0\"},dependencies:{\"@types/lodash\":\"^4.14.132\",cfonts:\"^2.4.3\",chalk:\"^2.1.0\",\"glob-all\":\"^3.1.0\",lodash:\"^4.17.11\",prettycli:\"^1.4.3\",sade:\"^1.5.0\",\"update-notifier\":\"^3.0.0\",\"yeoman-environment\":\"^2.3.4\",\"yeoman-generator\":\"^4.0.0\"},jest:{testEnvironment:\"node\",testPathIgnorePatterns:[\"/generators/app/templates/*\"]},husky:{hooks:{\"commit-msg\":\"commitlint -E HUSKY_GIT_PARAMS\"}},\"lint-staged\":{\"*.js\":[\"eslint --fix\",\"git add\"],\"*.json\":[\"prettier --write\",\"git add\"]},scripts:{lint:\"eslint .\",jest:\" jest\",local:\" nodemon dist/cli.js\",release:\"standard-version\",\"type:build\":\"tsc\",commit:\"git-cz\",\"type:watch\":\"tsc -w\",build:\"parcel build --no-autoinstall ./src/index.ts --target node --out-dir dist --out-file cli.js \",watch:\"parcel watch --no-autoinstall ./src/index.ts --target node --out-dir dist --out-file cli.js \"},repository:{type:\"git\",url:\"git+https://github.com/buildtip/create-web-app.git\"},license:\"Apache-2.0\"};","#!/usr/bin/env node\r\n\r\nimport sade from \"sade\";\r\nimport notifier from \"update-notifier\";\r\nimport create from \"./commands/create\";\r\nimport list from \"./commands/list\";\r\nimport run from \"./commands/run\";\r\nimport { projectName } from \"./utils/generator\";\r\n\r\n// tslint:disable-next-line: no-var-requires\r\nconst pkg = require(\"../package.json\");\r\nnotifier({ pkg }).notify();\r\n\r\nconst prog = sade(\"cwa\").version(pkg.version);\r\n\r\nprog\r\n  .command(\"list\")\r\n  .describe(\"List All The templates Available\")\r\n  .action(list);\r\nprog\r\n  .command(\"run [projectname]\")\r\n  .describe(\"[WIP] Gives the command to run the Project\")\r\n  .option(\"--src\", \"Please Mention the source if the default is changed\",\"\")\r\n  .action(run);\r\nprog\r\n  .command(\"create\")\r\n  .describe(\"create a project passing the template and your project name\")\r\n  .action(create);\r\n\r\nprog.parse(process.argv);\r\n"]}